<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__area_8h" kind="file" language="C++">
    <compoundname>lv_area.h</compoundname>
    <innerclass refid="structlv__point__t" prot="public">lv_point_t</innerclass>
    <innerclass refid="structlv__area__t" prot="public">lv_area_t</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__area_8h_1a37647854443a499e54bb174860c5afa9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LV_EXPORT_CONST_INT</definition>
        <argsstring>(LV_COORD_MAX)</argsstring>
        <name>LV_EXPORT_CONST_INT</name>
        <param>
          <type>LV_COORD_MAX</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="32" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aa4a14c21f2b6153037736a2405a0e369" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>LV_EXPORT_CONST_INT</definition>
        <argsstring>(LV_COORD_MIN)</argsstring>
        <name>LV_EXPORT_CONST_INT</name>
        <param>
          <type>LV_COORD_MIN</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="33" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a8a6f63df40693641307a31d39f44101d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2)</argsstring>
        <name>lv_area_set</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y1</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x2</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initialize an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x1</parametername>
</parameternamelist>
<parameterdescription>
<para>left coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y1</parametername>
</parameternamelist>
<parameterdescription>
<para>top coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x2</parametername>
</parameternamelist>
<parameterdescription>
<para>right coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y2</parametername>
</parameternamelist>
<parameterdescription>
<para>bottom coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a8cd923a44f2a33946baed7793072c24b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void lv_area_copy</definition>
        <argsstring>(lv_area_t *dest, const lv_area_t *src)</argsstring>
        <name>lv_area_copy</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>dest</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dest</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the destination area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the source area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="76" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1ab647b6dee16fa579c54ab6659caa8998" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>static lv_coord_t lv_area_get_width</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_width</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the width of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the width of the area (if x1 == x2 -&gt; width = 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="86" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a425546b8d4b319859f313f50f3e5becf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>lv_coord_t</type>
        <definition>static lv_coord_t lv_area_get_height</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_height</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the height of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the height of the area (if y1 == y2 -&gt; height = 1) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="96" column="1" bodyfile="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a7cd8866c2312050e4541d5cdd862ed4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_width</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t w)</argsstring>
        <name>lv_area_set_width</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the width of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>the new width of the area (w == 1 makes x1 == x2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a092d265b43760f45dded850e64c175c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_height</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t h)</argsstring>
        <name>lv_area_set_height</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the height of an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>the new height of the area (h == 1 makes y1 == y2) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="113" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aa746f39b483e5368cabd6c56ea9f5736" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_set_pos</definition>
        <argsstring>(lv_area_t *area_p, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>lv_area_set_pos</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the position of an area (width and height will be kept) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the new x coordinate of the area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>the new y coordinate of the area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a71b2b35191f41ba629245399ce5aaf39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lv_area_get_size</definition>
        <argsstring>(const lv_area_t *area_p)</argsstring>
        <name>lv_area_get_size</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>area_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return with area of an area (x * y) <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>area_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size of area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="128" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aebf8be947f901f46693b4c2956a805a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_intersect</definition>
        <argsstring>(lv_area_t *res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_intersect</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the common parts of two areas <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored her </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: the two area has NO common parts, res_p is invalid </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="137" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a5624f73deeed656fe3d830694f1095df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_join</definition>
        <argsstring>(lv_area_t *a_res_p, const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_join</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_res_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join two areas into a third which involves the other two <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>res_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area, the result will be stored here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the first area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the second area </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="145" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1a5d63e038e924a898118c841d61d2a9f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_point_on</definition>
        <argsstring>(const lv_area_t *a_p, const lv_point_t *p_p)</argsstring>
        <name>lv_area_is_point_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__point__t" kindref="compound">lv_point_t</ref> *</type>
          <declname>p_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a point is on an area <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a point </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false:the point is out of the area </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aa2a98c824a46cad50e1b5fa75fbaee10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_on</definition>
        <argsstring>(const lv_area_t *a1_p, const lv_area_t *a2_p)</argsstring>
        <name>lv_area_is_on</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a1_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a2_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if two area has common parts <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a1_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a2_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an other area </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>false: a1_p and a2_p has no common parts </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1aca2cfda730417164f24a6120ca80cbc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_area_is_in</definition>
        <argsstring>(const lv_area_t *ain_p, const lv_area_t *aholder_p)</argsstring>
        <name>lv_area_is_in</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>ain_p</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>aholder_p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if an area is fully on an other <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ain_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could be on aholder_p </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>aholder</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area which could involve ain_p </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__area_8h_1ab945998b755c746a92d63257a78975b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_area_increment</definition>
        <argsstring>(lv_area_t *a_p, const lv_coord_t amount)</argsstring>
        <name>lv_area_increment</name>
        <param>
          <type><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>a_p</declname>
        </param>
        <param>
          <type>const lv_coord_t</type>
          <declname>amount</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Increment or decrement an area&apos;s size by a single amount <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a_p</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an area to grow </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>amount</parametername>
</parameternamelist>
<parameterdescription>
<para>amount to increment the area, or negative to decrement </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h" line="176" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_AREA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_AREA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LV_CONF_INCLUDE_SIMPLE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;lv_conf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../../lv_conf.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*To<sp/>avoid<sp/>overflow<sp/>don&apos;t<sp/>let<sp/>the<sp/>max<sp/>ranges<sp/>(reduce<sp/>with<sp/>1000)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_COORD_MAX<sp/>((lv_coord_t)((uint32_t)((uint32_t)1<sp/>&lt;&lt;<sp/>(8<sp/>*<sp/>sizeof(lv_coord_t)<sp/>-<sp/>1))<sp/>-<sp/>1000))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_COORD_MIN<sp/>(-LV_COORD_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">LV_EXPORT_CONST_INT(LV_COORD_MAX);</highlight></codeline>
<codeline lineno="33"><highlight class="normal">LV_EXPORT_CONST_INT(LV_COORD_MIN);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="structlv__point__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}<sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref>;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="structlv__area__t" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x1;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y1;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>x2;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>lv_coord_t<sp/>y2;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}<sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a8a6f63df40693641307a31d39f44101d" kindref="member">lv_area_set</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x1,<sp/>lv_coord_t<sp/>y1,<sp/>lv_coord_t<sp/>x2,<sp/>lv_coord_t<sp/>y2);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lv_area_copy(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>dest,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>src)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(dest,<sp/>src,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref>));</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>lv_area_get_width(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lv_coord_t)(area_p-&gt;x2<sp/>-<sp/>area_p-&gt;x1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>lv_area_get_height(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lv_coord_t)(area_p-&gt;y2<sp/>-<sp/>area_p-&gt;y1<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a7cd8866c2312050e4541d5cdd862ed4a" kindref="member">lv_area_set_width</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>w);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a092d265b43760f45dded850e64c175c7" kindref="member">lv_area_set_height</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>h);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1aa746f39b483e5368cabd6c56ea9f5736" kindref="member">lv_area_set_pos</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">uint32_t<sp/><ref refid="lv__area_8h_1a71b2b35191f41ba629245399ce5aaf39" kindref="member">lv_area_get_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>area_p);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1aebf8be947f901f46693b4c2956a805a0" kindref="member">lv_area_intersect</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a5624f73deeed656fe3d830694f1095df" kindref="member">lv_area_join</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_res_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1a5d63e038e924a898118c841d61d2a9f7" kindref="member">lv_area_is_point_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__point__t" kindref="compound">lv_point_t</ref><sp/>*<sp/>p_p);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1aa2a98c824a46cad50e1b5fa75fbaee10" kindref="member">lv_area_is_on</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a1_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a2_p);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1aca2cfda730417164f24a6120ca80cbc3" kindref="member">lv_area_is_in</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>ain_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>aholder_p);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__area_8h_1ab945998b755c746a92d63257a78975b5" kindref="member">lv_area_increment</ref>(<ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>a_p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>lv_coord_t<sp/>amount);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_misc/lv_area.h"/>
  </compounddef>
</doxygen>
