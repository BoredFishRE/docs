<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lv__draw__img_8h" kind="file" language="C++">
    <compoundname>lv_draw_img.h</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="lv__draw__img_8h_1a2033a392943823724cb5d9aa11545dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_draw_img</definition>
        <argsstring>(const lv_area_t *coords, const lv_area_t *mask, const void *src, const lv_style_t *style, lv_opa_t opa_scale)</argsstring>
        <name>lv_draw_img</name>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__area__t" kindref="compound">lv_area_t</ref> *</type>
          <declname>mask</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
          <declname>style</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa_scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Draw an image <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
</parameternamelist>
<parameterdescription>
<para>the coordinates of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mask</parametername>
</parameternamelist>
<parameterdescription>
<para>the image will be drawn only in this area </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to a lv_color_t array which contains the pixels of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>style of the image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa_scale</parametername>
</parameternamelist>
<parameterdescription>
<para>scale down all opacities by the factor </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1ad1749598689c14b0b65ed7a81bc48148" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_img_src_t</type>
        <definition>lv_img_src_t lv_img_src_get_type</definition>
        <argsstring>(const void *src)</argsstring>
        <name>lv_img_src_get_type</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the type of an image source <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>src</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image source:<itemizedlist>
<listitem><para>pointer to an &apos;lv_img_t&apos; variable (image stored internally and compiled into the code)</para></listitem><listitem><para>a path to a file (e.g. &quot;S:/folder/image.bin&quot;)</para></listitem><listitem><para>or a symbol (e.g. LV_SYMBOL_CLOSE) </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type of the image source LV_IMG_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a347ab98a2701cd05732c94a54f5c2e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
        <definition>lv_color_t lv_img_buf_get_px_color</definition>
        <argsstring>(lv_img_dsc_t *dsc, lv_coord_t x, lv_coord_t y, const lv_style_t *style)</argsstring>
        <name>lv_img_buf_get_px_color</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const <ref refid="structlv__style__t" kindref="compound">lv_style_t</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the color of an image&apos;s pixel <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>an image descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to get </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>style of the image. In case of <computeroutput>LV_IMG_CF_ALPHA_1/2/4/8</computeroutput> <computeroutput>style-&gt;image.color</computeroutput> shows the color. Can be <computeroutput>NULL</computeroutput> but for <computeroutput>ALPHA</computeroutput> images black will be returned. In other cases it is not used. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>color of the point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="82" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1ada8e08538d9c79d72c3b75681abf0c59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>lv_opa_t</type>
        <definition>lv_opa_t lv_img_buf_get_px_alpha</definition>
        <argsstring>(lv_img_dsc_t *dsc, lv_coord_t x, lv_coord_t y)</argsstring>
        <name>lv_img_buf_get_px_alpha</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the alpha value of an image&apos;s pixel <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>alpha value of the point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1aa137b85163313565d31aa47e71032c00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_img_buf_set_px_color</definition>
        <argsstring>(lv_img_dsc_t *dsc, lv_coord_t x, lv_coord_t y, lv_color_t c)</argsstring>
        <name>lv_img_buf_set_px_color</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the color of a pixel of an image. The alpha channel won&apos;t be affected. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>color of the point </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="99" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a00e3395e129e36a06f0743355056c641" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_img_buf_set_px_alpha</definition>
        <argsstring>(lv_img_dsc_t *dsc, lv_coord_t x, lv_coord_t y, lv_opa_t opa)</argsstring>
        <name>lv_img_buf_set_px_alpha</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>x</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>y</declname>
        </param>
        <param>
          <type>lv_opa_t</type>
          <declname>opa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the alpha value of a pixel of an image. The color won&apos;t be affected <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>x coordinate of the point to set </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>opa</parametername>
</parameternamelist>
<parameterdescription>
<para>the desired opacity </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1af52fa01e288c05056908e06365c9a1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_img_buf_set_palette</definition>
        <argsstring>(lv_img_dsc_t *dsc, uint8_t id, lv_color_t c)</argsstring>
        <name>lv_img_buf_set_palette</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>id</declname>
        </param>
        <param>
          <type><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the palette color of an indexed image. Valid only for <computeroutput>LV_IMG_CF_INDEXED1/2/4/8</computeroutput> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to an image descriptor </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the palette color to set:<itemizedlist>
<listitem><para>for <computeroutput>LV_IMG_CF_INDEXED1</computeroutput>: 0..1</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED2</computeroutput>: 0..3</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED4</computeroutput>: 0..15</para></listitem><listitem><para>for <computeroutput>LV_IMG_CF_INDEXED8</computeroutput>: 0..255 </para></listitem></itemizedlist>
</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>the color to set </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="120" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a5ceadd85532c5241e2a0328a434094bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t lv_img_color_format_get_px_size</definition>
        <argsstring>(lv_img_cf_t cf)</argsstring>
        <name>lv_img_color_format_get_px_size</name>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the pixel size of a color format in bits <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>a color format (<computeroutput>LV_IMG_CF_...</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the pixel size in bits </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="127" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a67102f00e9fc19daf341170b5039a99e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_img_color_format_is_chroma_keyed</definition>
        <argsstring>(lv_img_cf_t cf)</argsstring>
        <name>lv_img_color_format_is_chroma_keyed</name>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a color format is chroma keyed or not <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>a color format (<computeroutput>LV_IMG_CF_...</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: chroma keyed; false: not chroma keyed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1abecb6b81d3d0ff80c050cce918435c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool lv_img_color_format_has_alpha</definition>
        <argsstring>(lv_img_cf_t cf)</argsstring>
        <name>lv_img_color_format_has_alpha</name>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if a color format has alpha channel or not <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>a color format (<computeroutput>LV_IMG_CF_...</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true: has alpha channel; false: doesn&apos;t have alpha channel </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a0119ae731cc4db78cb1ac5d57f1cea4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
        <definition>lv_img_dsc_t* lv_img_buf_alloc</definition>
        <argsstring>(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)</argsstring>
        <name>lv_img_buf_alloc</name>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Allocate an image buffer in RAM <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width of image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height of image </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>a color format (<computeroutput>LV_IMG_CF_...</computeroutput>) </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>an allocated image, or NULL on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="150" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1afda14850c7da203239ded571831a776e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lv_img_buf_free</definition>
        <argsstring>(lv_img_dsc_t *dsc)</argsstring>
        <name>lv_img_buf_free</name>
        <param>
          <type><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref> *</type>
          <declname>dsc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Free an allocated image buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dsc</parametername>
</parameternamelist>
<parameterdescription>
<para>image buffer to free </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="lv__draw__img_8h_1a5da34d625c83610b49ee8eb11d55a8cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t lv_img_buf_get_img_size</definition>
        <argsstring>(lv_coord_t w, lv_coord_t h, lv_img_cf_t cf)</argsstring>
        <name>lv_img_buf_get_img_size</name>
        <param>
          <type>lv_coord_t</type>
          <declname>w</declname>
        </param>
        <param>
          <type>lv_coord_t</type>
          <declname>h</declname>
        </param>
        <param>
          <type>lv_img_cf_t</type>
          <declname>cf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the memory consumption of a raw bitmap, given color format and dimensions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>w</parametername>
</parameternamelist>
<parameterdescription>
<para>width </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>h</parametername>
</parameternamelist>
<parameterdescription>
<para>height </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cf</parametername>
</parameternamelist>
<parameterdescription>
<para>color format </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>size in bytes </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h" line="165" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>LV_DRAW_IMG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_DRAW_IMG_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>INCLUDES</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__draw_8h" kindref="compound">lv_draw.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lv__img__decoder_8h" kindref="compound">lv_img_decoder.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/*********************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>DEFINES</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>MACROS</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR(w,<sp/>h)<sp/>((LV_COLOR_SIZE<sp/>/<sp/>8)<sp/>*<sp/>w<sp/>*<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR_CHROMA_KEYED(w,<sp/>h)<sp/>((LV_COLOR_SIZE<sp/>/<sp/>8)<sp/>*<sp/>w<sp/>*<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_TRUE_COLOR_ALPHA(w,<sp/>h)<sp/>(LV_IMG_PX_SIZE_ALPHA_BYTE<sp/>*<sp/>w<sp/>*<sp/>h)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">/*+<sp/>1:<sp/>to<sp/>be<sp/>sure<sp/>no<sp/>fractional<sp/>row*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_ALPHA_1BIT(w,<sp/>h)<sp/>((((w<sp/>/<sp/>8)<sp/>+<sp/>1)<sp/>*<sp/>h))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_ALPHA_2BIT(w,<sp/>h)<sp/>((((w<sp/>/<sp/>4)<sp/>+<sp/>1)<sp/>*<sp/>h))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_ALPHA_4BIT(w,<sp/>h)<sp/>((((w<sp/>/<sp/>2)<sp/>+<sp/>1)<sp/>*<sp/>h))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_ALPHA_8BIT(w,<sp/>h)<sp/>((w<sp/>*<sp/>h))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*4<sp/>*<sp/>X:<sp/>for<sp/>palette*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_INDEXED_1BIT(w,<sp/>h)<sp/>(LV_IMG_BUF_SIZE_ALPHA_1BIT(w,<sp/>h)<sp/>+<sp/>4<sp/>*<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_INDEXED_2BIT(w,<sp/>h)<sp/>(LV_IMG_BUF_SIZE_ALPHA_2BIT(w,<sp/>h)<sp/>+<sp/>4<sp/>*<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_INDEXED_4BIT(w,<sp/>h)<sp/>(LV_IMG_BUF_SIZE_ALPHA_4BIT(w,<sp/>h)<sp/>+<sp/>4<sp/>*<sp/>16)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>LV_IMG_BUF_SIZE_INDEXED_8BIT(w,<sp/>h)<sp/>(LV_IMG_BUF_SIZE_ALPHA_8BIT(w,<sp/>h)<sp/>+<sp/>4<sp/>*<sp/>256)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>TYPEDEFS</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">/**********************</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>GLOBAL<sp/>PROTOTYPES</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>**********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1a2033a392943823724cb5d9aa11545dc2" kindref="member">lv_draw_img</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/><ref refid="struct__lv__obj__t_1a5159a54e860e2efa245ccd12f1f26253" kindref="member">coords</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__area__t" kindref="compound">lv_area_t</ref><sp/>*<sp/>mask,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lv_opa_t<sp/><ref refid="struct__lv__obj__t_1a7c8b44d96aa237f8c02e8bc50ecfe4ca" kindref="member">opa_scale</ref>);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">lv_img_src_t<sp/><ref refid="lv__draw__img_8h_1ad1749598689c14b0b65ed7a81bc48148" kindref="member">lv_img_src_get_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>src);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/><ref refid="lv__draw__img_8h_1a347ab98a2701cd05732c94a54f5c2e54" kindref="member">lv_img_buf_get_px_color</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>dsc,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlv__style__t" kindref="compound">lv_style_t</ref><sp/>*<sp/>style);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">lv_opa_t<sp/><ref refid="lv__draw__img_8h_1ada8e08538d9c79d72c3b75681abf0c59" kindref="member">lv_img_buf_get_px_alpha</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>dsc,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1aa137b85163313565d31aa47e71032c00" kindref="member">lv_img_buf_set_px_color</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>dsc,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>c);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1a00e3395e129e36a06f0743355056c641" kindref="member">lv_img_buf_set_px_alpha</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>dsc,<sp/>lv_coord_t<sp/>x,<sp/>lv_coord_t<sp/>y,<sp/>lv_opa_t<sp/>opa);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1af52fa01e288c05056908e06365c9a1e6" kindref="member">lv_img_buf_set_palette</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<sp/>dsc,<sp/>uint8_t<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><ref refid="unionlv__color1__t" kindref="compound">lv_color_t</ref><sp/>c);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">uint8_t<sp/><ref refid="lv__draw__img_8h_1a5ceadd85532c5241e2a0328a434094bb" kindref="member">lv_img_color_format_get_px_size</ref>(lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1a67102f00e9fc19daf341170b5039a99e" kindref="member">lv_img_color_format_is_chroma_keyed</ref>(lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1abecb6b81d3d0ff80c050cce918435c0c" kindref="member">lv_img_color_format_has_alpha</ref>(lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*<ref refid="lv__draw__img_8h_1a0119ae731cc4db78cb1ac5d57f1cea4c" kindref="member">lv_img_buf_alloc</ref>(lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h,<sp/>lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="lv__draw__img_8h_1afda14850c7da203239ded571831a776e" kindref="member">lv_img_buf_free</ref>(<ref refid="structlv__img__dsc__t" kindref="compound">lv_img_dsc_t</ref><sp/>*dsc);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">uint32_t<sp/><ref refid="lv__draw__img_8h_1a5da34d625c83610b49ee8eb11d55a8cf" kindref="member">lv_img_buf_get_img_size</ref>(lv_coord_t<sp/>w,<sp/>lv_coord_t<sp/>h,<sp/>lv_img_cf_t<sp/>cf);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>extern<sp/>&quot;C&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*LV_TEMPL_H*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/kisvegabor/projects/littlevgl/eclipse-workspace/lv_sim_eclipse_sdl_master/lvgl/scripts/lvgl/src/lv_draw/lv_draw_img.h"/>
  </compounddef>
</doxygen>
